name: Deploy Documentation

on:
  push:
    branches:
      - master
    paths:
      - "src/**" # Trigger on library code changes
      - "docs/src/**" # Trigger on mdBook source changes
      - "docs/book.toml"
      - "Cargo.toml" # Trigger if crate metadata or dependencies change
      - "Cargo.lock"
      - ".github/workflows/deploy-docs.yml" # Trigger on changes to this workflow file

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: write # Allow peaceiris/actions-gh-pages to push to the gh-pages branch

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt, clippy # Optional: for linting/formatting if needed in other steps

      - name: Install mdBook
        run: |
          if ! command -v mdbook &> /dev/null
          then
              cargo install mdbook # Simpler install, rely on default features
          else
              echo "mdBook already installed"
          fi

      - name: Build rustdoc
        run: cargo doc --no-deps
        # Output will be in target/doc/

      - name: Build mdBook
        # Assumes your mdBook source is in the 'docs' directory relative to the repo root
        # and book.toml specifies build-dir = "book" (so output is docs/book)
        run: mdbook build docs

      - name: Copy rustdoc to mdBook output
        # Ensure the destination directory exists within the mdBook build output
        # Assumes crate name is 'rustree', so rustdoc files are in target/doc/rustree/
        # This change copies the *contents* of target/doc/rustree/ into docs/book/api-docs/
        run: |
          CRATE_NAME=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[] | select(.manifest_path |endswith("Cargo.toml")) | .name' | head -n 1)
          echo "Detected crate name: $CRATE_NAME"
          mkdir -p docs/book/api-docs/
          if [ -d "target/doc/$CRATE_NAME" ]; then
            cp -r target/doc/$CRATE_NAME/* docs/book/api-docs/
          else
            # Fallback for older rustdoc structures or if main crate doc isn't in a subdir
            # Or if there are other top-level doc files/dirs we want (like 'src', 'search-index.js')
            # This part might need adjustment based on actual 'target/doc' structure if CRATE_NAME dir isn't the only thing
            echo "Warning: Could not find target/doc/$CRATE_NAME. Copying target/doc/* instead."
            echo "This might result in an extra directory level for your API docs (e.g., api-docs/$CRATE_NAME/)."
            cp -r target/doc/* docs/book/api-docs/
          fi

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4 # Use v4 for Node 20 compatibility
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/book # This is the directory that GitHub Pages will serve
          # Default publish_branch is gh-pages, which is fine.
          # Configure GitHub Pages to serve from the 'gh-pages' branch, root directory.
          user_name: "github-actions[bot]"
          user_email: "github-actions[bot]@users.noreply.github.com"
          commit_message: "Deploy documentation to GitHub Pages"
